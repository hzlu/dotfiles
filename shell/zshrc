# 依赖 zsh curl wget git ccat
# 字体建议 sauce code powerline

[[ -r ~/.bashrc ]] && . ~/.bashrc

# 打印环境变量PATH
show_path () {
  echo $PATH | awk -F: '{for(i=1;i<=NF;i++){print $i}}'
}

show_color () {
  for i in {0..255} ; do
    printf "\x1b[38;5;${i}mcolor${i}\n"
  done
}

if [[ -e "$HOME/.iterm2_shell_integration.zsh" ]]; then
  echo "iTerm2 Shell Integration"
  source "${HOME}/.iterm2_shell_integration.zsh"
  # imgcat filename
  #   Displays the image inline.
  # imgls
  #   Shows a directory listing with image thumbnails
  # it2attention start|stop|fireworks
  #   Gets your attention
  # it2check
  #   Checks if the terminal is iTerm2
  # it2copy [filename]
  #   Copies to the pasteboard
  # it2dl filename
  #   Downloads the specified file, saving it in your Downloads folder.
  # it2setcolor ...
  #   Changes individual color settings or loads a color preset
  # it2setkeylabel ...
  #   Changes Touch Bar function key labels
  # it2ul
  #   Uploads a file
  # it2universion
  #   Sets the current unicode version
fi

DEFAULT_USER="luhaozhao"
export EDITOR=vim
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
export VIM_CONFIG_PATH=$HOME/Dropbox/dotfiles/vim/config
# export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles
export HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK=1
export HOMEBREW_NO_AUTO_UPDATE=1
# export HOMEBREW_NO_INSTALL_CLEANUP=1

# omz update 手动更新命令
# uninstall_oh_my_zsh 卸载指令
export ZSH=$HOME/.oh-my-zsh
export UPDATE_ZSH_DAYS=7
# 安装spaceship主题
# git clone https://github.com/denysdovhan/spaceship-prompt.git "$ZSH_CUSTOM/themes/spaceship-prompt"
# ln -s "$ZSH_CUSTOM/themes/spaceship-prompt/spaceship.zsh-theme" "$ZSH_CUSTOM/themes/spaceship.zsh-theme"
ZSH_THEME="spaceship"
# 插件列表
plugins=(
  common-aliases
  git
  brew
  bundler
  dotenv
  # macos
  zsh-autosuggestions
  transfer
  colored-man-pages
  copyfile
  thefuck
  themes
  tig
  tmux
  vi-mode
  autojump
  iterm2
  kubectl
  spaceship-section
)
source $ZSH/oh-my-zsh.sh

spaceship add proxy

alias config="vim ~/.zshrc"
# 更好看的 cat 支持代码高亮
# alias cat="ccat"
alias ip="dig +short myip.opendns.com @resolver1.opendns.com"
alias ipinfo="curl ipinfo.io"
alias localip="ipconfig getifaddr en0"
alias show_ssh="cat ~/.ssh/config"
# 命令行天气
alias weather="curl http://wttr.in/广州"
# 计时器
alias timer='echo "Timer started. Stop with Ctrl-D." && date && time cat && date'
# 显示隐藏文件
alias show='defaults write com.apple.finder AppleShowAllFiles -boolean true ; killall Finder'
# 隐藏文件
alias hide='defaults write com.apple.finder AppleShowAllFiles -boolean false ; killall Finder'
alias k=kubectl
# 启动代理
alias start_proxy='export http_proxy=http://127.0.0.1:1089;export https_proxy=http://127.0.0.1:1089;export ALL_PROXY=socks://127.0.0.1:1088'
# 停止代理
alias stop_proxy='unset http_proxy https_proxy ALL_PROXY'
# 开启WIFI socks代理
alias proxy_on='sudo networksetup -setsocksfirewallproxystate Wi-Fi on'
# 关闭WIFI socks代理
alias proxy_off='sudo networksetup -setsocksfirewallproxystate Wi-Fi off'
# 显示WIFI socks代理状态
alias proxy_show='networksetup -getsocksfirewallproxy Wi-Fi'
compdef __start_kubectl k

# thefuck
eval $(thefuck --alias)

echo "Loaded zshrc"

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
if [ -f "/opt/anaconda3/bin/conda" ]; then

  __conda_setup="$('/opt/anaconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
  if [ $? -eq 0 ]; then
      eval "$__conda_setup"
  else
      if [ -f "/Users/luhaozhao/anaconda3/etc/profile.d/conda.sh" ]; then
          . "/Users/luhaozhao/anaconda3/etc/profile.d/conda.sh"
      else
          export PATH="/opt/anaconda3/bin:$PATH"
      fi
  fi
else
  __conda_setup="$('/Users/luhaozhao/anaconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
  if [ $? -eq 0 ]; then
      eval "$__conda_setup"
  else
      if [ -f "/Users/luhaozhao/anaconda3/etc/profile.d/conda.sh" ]; then
          . "/Users/luhaozhao/anaconda3/etc/profile.d/conda.sh"
      else
          export PATH="/Users/luhaozhao/anaconda3/bin:$PATH"
      fi
  fi
fi

unset __conda_setup
# <<< conda initialize <<<

export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"
export PATH="/Applications/Docker.app/Contents/Resources/bin:$PATH"

# export PYENV_ROOT="$HOME/.pyenv"
# [[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
# eval "$(pyenv init -)"
